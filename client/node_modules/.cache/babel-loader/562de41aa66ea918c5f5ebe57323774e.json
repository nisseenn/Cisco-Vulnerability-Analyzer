{"ast":null,"code":"import _defineProperty from \"/home/vitorro/Documents/WebDev/cisco/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/vitorro/Documents/WebDev/cisco/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vitorro/Documents/WebDev/cisco/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vitorro/Documents/WebDev/cisco/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vitorro/Documents/WebDev/cisco/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vitorro/Documents/WebDev/cisco/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/vitorro/Documents/WebDev/cisco/src/CheckboxComponent.js\";\nimport React, { Component } from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DiagramComponent from './DiagramComponent.js';\nimport MenuComp from './MenuComp.js';\nimport Typography from '@material-ui/core/Typography';\n\nvar CheckboxComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CheckboxComponent, _Component);\n\n  function CheckboxComponent() {\n    var _this;\n\n    _classCallCheck(this, CheckboxComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CheckboxComponent).call(this));\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.checked));\n      };\n    };\n\n    _this.checkIos = function (e, title, updated, summary) {\n      var ios = e[0];\n\n      for (var x = 0; x < _this.props.ips.length; x++) {\n        var item = _this.props.ips[x].length;\n\n        for (var y = 0; y < item; y++) {\n          if (ios === _this.props.ips[x][0]) {\n            var ipaddress = _this.props.ips[x][1];\n            var iosRes = ios;\n\n            if (ipaddress === _this.props.ipFilter) {\n              console.log('true'); // <div><br /><Card className=\"card1\">\n              // <CardHeader title=<Typography className=\"card1-header\" gutterBottom variant=\"h5\" component=\"h2\">{title}\n              // </Typography> subheader={updated.split('T')[0]}/>\n              // <CardContent>\n              // <Typography className=\"card1-header\" gutterBottom variant=\"title\" component=\"h2\">ip address</Typography>\n              // <p>{this.state.ipFilter}</p>\n              // <Typography className=\"card1-header\" gutterBottom variant=\"title\" component=\"h2\">ios</Typography>\n              // <p>{iosRes}</p>\n              // </CardContent>\n              // <CardActions className=\"cardaction\" disableActionSpacing>\n              // <CheckboxComp summarySum={summary}/>\n              // </CardActions>\n              // </Card>\n              // </div>\n            } else {}\n          }\n        }\n      }\n    };\n\n    _this.state = {\n      checkedCritical: false,\n      checkedHigh: false,\n      checkedMedium: false,\n      checkedLow: false\n    };\n    return _this;\n  }\n\n  _createClass(CheckboxComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.checkedCritical === false && this.state.checkedHigh === false && this.state.checkedMedium === false) {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"checkBox-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(FormControlLabel, {\n          control: React.createElement(Checkbox, {\n            checked: this.state.checkedCritical,\n            onChange: this.handleChange('checkedCritical'),\n            value: \"checkedCritical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }),\n          label: \"Critical\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }), React.createElement(FormControlLabel, {\n          control: React.createElement(Checkbox, {\n            checked: this.state.checkedHigh,\n            onChange: this.handleChange('checkedHigh'),\n            value: \"checkedHigh\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }),\n          label: \"High\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }), React.createElement(FormControlLabel, {\n          control: React.createElement(Checkbox, {\n            checked: this.state.checkedMedium,\n            onChange: this.handleChange('checkedMedium'),\n            value: \"checkedMedium\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }),\n          label: \"Medium\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }), React.createElement(DiagramComponent, {\n          critical: this.props.critical1,\n          high: this.props.high1,\n          medium: this.props.medium1,\n          data: this.props.data,\n          sumVuln: this.props.sumVuln,\n          dosVuln: this.props.dosVuln,\n          numIos: this.props.numIos,\n          numIp: this.props.numIp,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        })));\n      }\n\n      if (this.state.checkedCritical && this.state.checkedHigh && this.state.checkedMedium === true) {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"checkBox-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(FormControlLabel, {\n          control: React.createElement(Checkbox, {\n            checked: this.state.checkedCritical,\n            onChange: this.handleChange('checkedCritical'),\n            value: \"checkedCritical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }),\n          label: \"Critical\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }), React.createElement(FormControlLabel, {\n          control: React.createElement(Checkbox, {\n            checked: this.state.checkedHigh,\n            onChange: this.handleChange('checkedHigh'),\n            value: \"checkedHigh\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }),\n          label: \"High\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }), React.createElement(FormControlLabel, {\n          control: React.createElement(Checkbox, {\n            checked: this.state.checkedMedium,\n            onChange: this.handleChange('checkedMedium'),\n            value: \"checkedMedium\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }),\n          label: \"Medium\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        })));\n      }\n\n      if (this.state.checkedCritical && this.state.checkedMedium === true) {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"checkBox-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(FormControlLabel, {\n          control: React.createElement(Checkbox, {\n            checked: this.state.checkedCritical,\n            onChange: this.handleChange('checkedCritical'),\n            value: \"checkedCritical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }),\n          label: \"Critical\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }), React.createElement(FormControlLabel, {\n          control: React.createElement(Checkbox, {\n            checked: this.state.checkedHigh,\n            onChange: this.handleChange('checkedHigh'),\n            value: \"checkedHigh\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }),\n          label: \"High\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }), React.createElement(FormControlLabel, {\n          control: React.createElement(Checkbox, {\n            checked: this.state.checkedMedium,\n            onChange: this.handleChange('checkedMedium'),\n            value: \"checkedMedium\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }),\n          label: \"Medium\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        })));\n      }\n\n      if (this.state.checkedCritical && this.state.checkedHigh === true) {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"checkBox-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(FormControlLabel, {\n          control: React.createElement(Checkbox, {\n            checked: this.state.checkedCritical,\n            onChange: this.handleChange('checkedCritical'),\n            value: \"checkedCritical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            },\n            __self: this\n          }),\n          label: \"Critical\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }), React.createElement(FormControlLabel, {\n          control: React.createElement(Checkbox, {\n            checked: this.state.checkedHigh,\n            onChange: this.handleChange('checkedHigh'),\n            value: \"checkedHigh\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164\n            },\n            __self: this\n          }),\n          label: \"High\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }), React.createElement(FormControlLabel, {\n          control: React.createElement(Checkbox, {\n            checked: this.state.checkedMedium,\n            onChange: this.handleChange('checkedMedium'),\n            value: \"checkedMedium\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171\n            },\n            __self: this\n          }),\n          label: \"Medium\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        })));\n      }\n\n      if (this.state.checkedHigh === true) {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"checkBox-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, React.createElement(FormControlLabel, {\n          control: React.createElement(Checkbox, {\n            checked: this.state.checkedCritical,\n            onChange: this.handleChange('checkedCritical'),\n            value: \"checkedCritical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185\n            },\n            __self: this\n          }),\n          label: \"Critical\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }), React.createElement(FormControlLabel, {\n          control: React.createElement(Checkbox, {\n            checked: this.state.checkedHigh,\n            onChange: this.handleChange('checkedHigh'),\n            value: \"checkedHigh\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }),\n          label: \"High\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }), React.createElement(FormControlLabel, {\n          control: React.createElement(Checkbox, {\n            checked: this.state.checkedMedium,\n            onChange: this.handleChange('checkedMedium'),\n            value: \"checkedMedium\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199\n            },\n            __self: this\n          }),\n          label: \"Medium\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        })));\n      }\n\n      if (this.state.checkedCritical === true) {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"checkBox-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, React.createElement(FormControlLabel, {\n          control: React.createElement(Checkbox, {\n            checked: this.state.checkedCritical,\n            onChange: this.handleChange('checkedCritical'),\n            value: \"checkedCritical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213\n            },\n            __self: this\n          }),\n          label: \"Critical\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }), React.createElement(FormControlLabel, {\n          control: React.createElement(Checkbox, {\n            checked: this.state.checkedHigh,\n            onChange: this.handleChange('checkedHigh'),\n            value: \"checkedHigh\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220\n            },\n            __self: this\n          }),\n          label: \"High\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }), React.createElement(FormControlLabel, {\n          control: React.createElement(Checkbox, {\n            checked: this.state.checkedMedium,\n            onChange: this.handleChange('checkedMedium'),\n            value: \"checkedMedium\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227\n            },\n            __self: this\n          }),\n          label: \"Medium\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        })));\n      }\n\n      if (this.state.checkedMedium === true) {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"checkBox-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, React.createElement(FormControlLabel, {\n          control: React.createElement(Checkbox, {\n            checked: this.state.checkedCritical,\n            onChange: this.handleChange('checkedCritical'),\n            value: \"checkedCritical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 243\n            },\n            __self: this\n          }),\n          label: \"Critical\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }), React.createElement(FormControlLabel, {\n          control: React.createElement(Checkbox, {\n            checked: this.state.checkedHigh,\n            onChange: this.handleChange('checkedHigh'),\n            value: \"checkedHigh\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 250\n            },\n            __self: this\n          }),\n          label: \"High\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }), React.createElement(FormControlLabel, {\n          control: React.createElement(Checkbox, {\n            checked: this.state.checkedMedium,\n            onChange: this.handleChange('checkedMedium'),\n            value: \"checkedMedium\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 257\n            },\n            __self: this\n          }),\n          label: \"Medium\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        })), this.props.medium.map(function (d, i) {\n          return React.createElement(\"div\", {\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 264\n            },\n            __self: this\n          }, React.createElement(Typography, {\n            className: \"card1-header\",\n            component: \"p\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 265\n            },\n            __self: this\n          }, _this2.checkIos(d.iosRelease, d.advisoryTitle, d.lastUpdated, d.summary)));\n        }));\n      }\n    }\n  }]);\n\n  return CheckboxComponent;\n}(Component);\n\nexport default CheckboxComponent;","map":{"version":3,"sources":["/home/vitorro/Documents/WebDev/cisco/src/CheckboxComponent.js"],"names":["React","Component","FormControlLabel","Checkbox","DiagramComponent","MenuComp","Typography","CheckboxComponent","handleChange","name","event","setState","target","checked","checkIos","e","title","updated","summary","ios","x","props","ips","length","item","y","ipaddress","iosRes","ipFilter","console","log","state","checkedCritical","checkedHigh","checkedMedium","checkedLow","critical1","high1","medium1","data","sumVuln","dosVuln","numIos","numIp","medium","map","d","i","iosRelease","advisoryTitle","lastUpdated"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DiagramComponent from './DiagramComponent.js';\nimport MenuComp from './MenuComp.js';\nimport Typography from '@material-ui/core/Typography';\n\nclass CheckboxComponent extends Component {\n  constructor(){\n    super()\n    this.state={\n      checkedCritical: false,\n      checkedHigh: false,\n      checkedMedium: false,\n      checkedLow: false,\n    }\n  }\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  checkIos = (e, title, updated, summary) => {\n    var ios = e[0];\n    for(var x=0; x < this.props.ips.length; x++){\n      var item = this.props.ips[x].length;\n      for(var y=0; y < item; y++){\n        if(ios === this.props.ips[x][0]){\n          var ipaddress = this.props.ips[x][1];\n          var iosRes = ios;\n            if(ipaddress === this.props.ipFilter){\n              console.log('true');\n              // <div><br /><Card className=\"card1\">\n              // <CardHeader title=<Typography className=\"card1-header\" gutterBottom variant=\"h5\" component=\"h2\">{title}\n              // </Typography> subheader={updated.split('T')[0]}/>\n              // <CardContent>\n              // <Typography className=\"card1-header\" gutterBottom variant=\"title\" component=\"h2\">ip address</Typography>\n              // <p>{this.state.ipFilter}</p>\n              // <Typography className=\"card1-header\" gutterBottom variant=\"title\" component=\"h2\">ios</Typography>\n              // <p>{iosRes}</p>\n              // </CardContent>\n              // <CardActions className=\"cardaction\" disableActionSpacing>\n              // <CheckboxComp summarySum={summary}/>\n              // </CardActions>\n              // </Card>\n              // </div>\n            }\n            else{\n\n            }\n        }\n      }\n    }\n  }\n\n  render() {\n    if(this.state.checkedCritical === false && this.state.checkedHigh === false && this.state.checkedMedium === false){\n      return (\n        <div className=\"App\">\n        <div className=\"checkBox-wrapper\">\n          <FormControlLabel control={\n            <Checkbox\n              checked={this.state.checkedCritical}\n              onChange={this.handleChange('checkedCritical')}\n              value=\"checkedCritical\" />}\n              label=\"Critical\" />\n\n          <FormControlLabel control={\n            <Checkbox\n              checked={this.state.checkedHigh}\n              onChange={this.handleChange('checkedHigh')}\n              value=\"checkedHigh\" /> }\n              label=\"High\" />\n\n          <FormControlLabel control={\n            <Checkbox\n              checked={this.state.checkedMedium}\n              onChange={this.handleChange('checkedMedium')}\n              value=\"checkedMedium\" /> }\n              label=\"Medium\" />\n\n          <DiagramComponent\n            critical={this.props.critical1}\n            high={this.props.high1}\n            medium={this.props.medium1}\n            data={this.props.data}\n            sumVuln={this.props.sumVuln}\n            dosVuln={this.props.dosVuln}\n            numIos={this.props.numIos}\n            numIp={this.props.numIp} />\n\n        </div>\n      </div>\n      )\n    }\n    if(this.state.checkedCritical && this.state.checkedHigh && this.state.checkedMedium === true){\n      return(\n        <div className=\"App\">\n        <div className=\"checkBox-wrapper\">\n          <FormControlLabel control={\n            <Checkbox\n              checked={this.state.checkedCritical}\n              onChange={this.handleChange('checkedCritical')}\n              value=\"checkedCritical\" />}\n              label=\"Critical\" />\n\n          <FormControlLabel control={\n            <Checkbox\n              checked={this.state.checkedHigh}\n              onChange={this.handleChange('checkedHigh')}\n              value=\"checkedHigh\" /> }\n              label=\"High\" />\n\n          <FormControlLabel control={\n            <Checkbox\n              checked={this.state.checkedMedium}\n              onChange={this.handleChange('checkedMedium')}\n              value=\"checkedMedium\" /> }\n              label=\"Medium\" />\n        </div>\n      </div>\n      )\n    }\n    if(this.state.checkedCritical && this.state.checkedMedium === true){\n      return(\n        <div className=\"App\">\n        <div className=\"checkBox-wrapper\">\n          <FormControlLabel control={\n            <Checkbox\n              checked={this.state.checkedCritical}\n              onChange={this.handleChange('checkedCritical')}\n              value=\"checkedCritical\" />}\n              label=\"Critical\" />\n\n          <FormControlLabel control={\n            <Checkbox\n              checked={this.state.checkedHigh}\n              onChange={this.handleChange('checkedHigh')}\n              value=\"checkedHigh\" /> }\n              label=\"High\" />\n\n          <FormControlLabel control={\n            <Checkbox\n              checked={this.state.checkedMedium}\n              onChange={this.handleChange('checkedMedium')}\n              value=\"checkedMedium\" /> }\n              label=\"Medium\" />\n        </div>\n      </div>\n      )\n    }\n    if(this.state.checkedCritical && this.state.checkedHigh === true){\n      return(\n        <div className=\"App\">\n        <div className=\"checkBox-wrapper\">\n          <FormControlLabel control={\n            <Checkbox\n              checked={this.state.checkedCritical}\n              onChange={this.handleChange('checkedCritical')}\n              value=\"checkedCritical\" />}\n              label=\"Critical\" />\n\n          <FormControlLabel control={\n            <Checkbox\n              checked={this.state.checkedHigh}\n              onChange={this.handleChange('checkedHigh')}\n              value=\"checkedHigh\" /> }\n              label=\"High\" />\n\n          <FormControlLabel control={\n            <Checkbox\n              checked={this.state.checkedMedium}\n              onChange={this.handleChange('checkedMedium')}\n              value=\"checkedMedium\" /> }\n              label=\"Medium\" />\n        </div>\n      </div>\n      )\n    }\n    if(this.state.checkedHigh === true){\n      return(\n        <div className=\"App\">\n        <div className=\"checkBox-wrapper\">\n          <FormControlLabel control={\n            <Checkbox\n              checked={this.state.checkedCritical}\n              onChange={this.handleChange('checkedCritical')}\n              value=\"checkedCritical\" />}\n              label=\"Critical\" />\n\n          <FormControlLabel control={\n            <Checkbox\n              checked={this.state.checkedHigh}\n              onChange={this.handleChange('checkedHigh')}\n              value=\"checkedHigh\" /> }\n              label=\"High\" />\n\n          <FormControlLabel control={\n            <Checkbox\n              checked={this.state.checkedMedium}\n              onChange={this.handleChange('checkedMedium')}\n              value=\"checkedMedium\" /> }\n              label=\"Medium\" />\n        </div>\n      </div>\n      )\n    }\n    if(this.state.checkedCritical === true){\n      return (\n        <div className=\"App\">\n        <div className=\"checkBox-wrapper\">\n          <FormControlLabel control={\n            <Checkbox\n              checked={this.state.checkedCritical}\n              onChange={this.handleChange('checkedCritical')}\n              value=\"checkedCritical\" />}\n              label=\"Critical\" />\n\n          <FormControlLabel control={\n            <Checkbox\n              checked={this.state.checkedHigh}\n              onChange={this.handleChange('checkedHigh')}\n              value=\"checkedHigh\" /> }\n              label=\"High\" />\n\n          <FormControlLabel control={\n            <Checkbox\n              checked={this.state.checkedMedium}\n              onChange={this.handleChange('checkedMedium')}\n              value=\"checkedMedium\" /> }\n              label=\"Medium\" />\n\n\n        </div>\n      </div>\n      )\n    }\n    if(this.state.checkedMedium === true){\n      return(\n        <div className=\"App\">\n          <div className=\"checkBox-wrapper\">\n            <FormControlLabel control={\n              <Checkbox\n                checked={this.state.checkedCritical}\n                onChange={this.handleChange('checkedCritical')}\n                value=\"checkedCritical\" />}\n                label=\"Critical\" />\n\n            <FormControlLabel control={\n              <Checkbox\n                checked={this.state.checkedHigh}\n                onChange={this.handleChange('checkedHigh')}\n                value=\"checkedHigh\" /> }\n                label=\"High\" />\n\n            <FormControlLabel control={\n              <Checkbox\n                checked={this.state.checkedMedium}\n                onChange={this.handleChange('checkedMedium')}\n                value=\"checkedMedium\" /> }\n                label=\"Medium\" />\n          </div>\n          {this.props.medium.map((d, i) => (\n            <div key={i}>\n            <Typography className=\"card1-header\" component=\"p\">\n              {this.checkIos(d.iosRelease, d.advisoryTitle, d.lastUpdated, d.summary)}\n           </Typography>\n              </div>\n            ))}\n      </div>\n      )\n    }\n\n  }\n}\n\nexport default CheckboxComponent\n"]},"metadata":{},"sourceType":"module"}