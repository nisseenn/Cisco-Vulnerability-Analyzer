{"ast":null,"code":"import _toConsumableArray from \"/home/vitorro/Documents/WebDev/cisco/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/vitorro/Documents/WebDev/cisco/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vitorro/Documents/WebDev/cisco/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vitorro/Documents/WebDev/cisco/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vitorro/Documents/WebDev/cisco/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vitorro/Documents/WebDev/cisco/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/vitorro/Documents/WebDev/cisco/src/App.js\";\nimport React, { Component } from 'react';\nimport jsonString from './Nmap/outfile.json';\nimport './App.css';\nimport Nav from './Nav.js';\nimport axios from 'axios';\nimport CheckboxComponent from './CheckboxComponent.js';\n\nvar request = require(\"request\");\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      gotData: [],\n      Critical: [],\n      High: [],\n      Medium: [],\n      Low: [],\n      dhcp: [],\n      dns: [],\n      dosdns: [],\n      dosmulti: [],\n      dostcp: [],\n      dosSC: [],\n      dosIP: [],\n      snmp: [],\n      ftp: [],\n      ipsocket: [],\n      mvpn: [],\n      vlan: [],\n      sumVuln: [],\n      dosVuln: [],\n      string: [],\n      ips: [],\n      ipz: [],\n      data: [],\n      data1: [],\n      loading: true\n    };\n\n    _this.componentDidMount = function () {\n      axios.post('https://cloudsso.cisco.com/as/token.oauth2', 'grant_type=client_credentials&client_id=exxefret986esfy7jfjuwhr8&client_secret=hsPxtmjsSYE5FgGTJyzJwJdh').then(function (res) {\n        var accesstoken = res.data.access_token;\n\n        for (var i = 0; i < jsonString.length; i++) {\n          var object = jsonString[i].ios;\n          var ip1 = jsonString[i].ip;\n\n          _this.setState({\n            string: [].concat(_toConsumableArray(_this.state.string), [object])\n          });\n\n          _this.setState({\n            ips: [].concat(_toConsumableArray(_this.state.ips), [[object, ip1]])\n          });\n\n          _this.setState({\n            ipz: [].concat(_toConsumableArray(_this.state.ipz), [ip1])\n          });\n        }\n\n        for (var x = 0; x < _this.state.string.length; x++) {\n          var options = {\n            method: 'GET',\n            url: 'https://api.cisco.com/security/advisories/ios?version=' + _this.state.string[x],\n            headers: {\n              'cache-control': 'no-cache',\n              authorization: 'Bearer ' + accesstoken,\n              accept: 'application/json'\n            }\n          };\n          request(options, function (error, response, body, event) {\n            var callResponse = JSON.parse(body);\n            var callRez = callResponse.advisories;\n            console.log(callRez);\n\n            for (var x = 0; x < callRez.length; x++) {\n              var title = callRez[x].advisoryTitle;\n\n              if (title.includes('DHCP')) {\n                _this.setState({\n                  dhcp: [].concat(_toConsumableArray(_this.state.dhcp), ['DHCP'])\n                });\n              }\n\n              if (title.includes('DNS')) {\n                _this.setState({\n                  dns: [].concat(_toConsumableArray(_this.state.dns), ['DNS'])\n                });\n              }\n\n              if (title.includes('Denial of Service' && 'DNS')) {\n                _this.setState({\n                  dosdns: [].concat(_toConsumableArray(_this.state.dosdns), ['DNS'])\n                });\n              }\n\n              if (title.includes('Denial of Service' && 'Multicast Network Time Protocol')) {\n                _this.setState({\n                  dosmulti: [].concat(_toConsumableArray(_this.state.dosmulti), ['Multicast Protocol'])\n                });\n              }\n\n              if (title.includes('Denial of Service' && 'TCP')) {\n                _this.setState({\n                  dostcp: [].concat(_toConsumableArray(_this.state.dostcp), ['TCP'])\n                });\n              }\n\n              if (title.includes('Denial of Service' && 'Software Cluster Management Protocol')) {\n                _this.setState({\n                  dosSC: [].concat(_toConsumableArray(_this.state.dosSC), ['Cluster Protocol'])\n                });\n              }\n\n              if (title.includes('Denial of Service' && 'IP Fragment')) {\n                _this.setState({\n                  dosIP: [].concat(_toConsumableArray(_this.state.dosIP), ['IP Fragment'])\n                });\n              }\n\n              if (title.includes('SNMP')) {\n                _this.setState({\n                  snmp: [].concat(_toConsumableArray(_this.state.snmp), ['SNMP'])\n                });\n              }\n\n              if (title.includes('FTP')) {\n                _this.setState({\n                  ftp: [].concat(_toConsumableArray(_this.state.ftp), ['FTP'])\n                });\n              }\n\n              if (title.includes('IP Sockets')) {\n                _this.setState({\n                  ipsocket: [].concat(_toConsumableArray(_this.state.ipsocket), ['IP Sockets'])\n                });\n              }\n\n              if (title.includes('MVPN')) {\n                _this.setState({\n                  mvpn: [].concat(_toConsumableArray(_this.state.mvpn), ['MVPN'])\n                });\n              }\n\n              if (title.includes('VLAN')) {\n                _this.setState({\n                  vlan: [].concat(_toConsumableArray(_this.state.vlan), ['VLAN'])\n                });\n              }\n            }\n\n            _this.setState({\n              dosVuln: [{\n                subject: _this.state.dosdns[0],\n                A: _this.state.dosdns.length\n              }, {\n                subject: _this.state.dosmulti[0],\n                A: _this.state.dosmulti.length\n              }, {\n                subject: _this.state.dostcp[0],\n                A: _this.state.dostcp.length\n              }, {\n                subject: _this.state.dosSC[0],\n                A: _this.state.dosSC.length\n              }, {\n                subject: _this.state.dosIP[0],\n                A: _this.state.dosIP.length\n              }]\n            });\n\n            _this.setState({\n              sumVuln: [{\n                subject: _this.state.dhcp[0],\n                A: _this.state.dhcp.length\n              }, {\n                subject: _this.state.dns[0],\n                A: _this.state.dns.length\n              }, {\n                subject: _this.state.snmp[0],\n                A: _this.state.snmp.length\n              }, {\n                subject: _this.state.ftp[0],\n                A: _this.state.ftp.length\n              }, {\n                subject: _this.state.ipsocket[0],\n                A: _this.state.ipsocket.length\n              }, {\n                subject: _this.state.mvpn[0],\n                A: _this.state.mvpn.length\n              }, {\n                subject: _this.state.vlan[0],\n                A: _this.state.vlan.length\n              }]\n            });\n\n            for (var t = 0; t < _this.state.ips.length; t++) {\n              var ios = _this.state.ips[t];\n\n              for (var y = 0; y < ios.length; y++) {\n                var eachIos = _this.state.ips[t][y];\n\n                for (var q = 0; q < callResponse.advisories.length; q++) {\n                  var data = callResponse.advisories[q].iosRelease[0];\n\n                  if (data === eachIos) {\n                    var count = q + 1;\n                    var sum = {\n                      ios: eachIos,\n                      Vulnerabilities: count\n                    };\n                  }\n                }\n              }\n            }\n\n            _this.setState({\n              data1: [].concat(_toConsumableArray(_this.state.data1), [sum])\n            });\n\n            for (var s = 0; s < _this.state.data1.length; s++) {\n              var iosCount = _this.state.data1[s].ios;\n              var number = _this.state.data1[s].Vulnerabilities;\n\n              for (var o = 0; o < _this.state.ips.length; o++) {\n                var eachArray = _this.state.ips[o][0];\n                var ip = _this.state.ips[o][1];\n\n                if (eachArray === iosCount) {\n                  var newData = {\n                    name: ip,\n                    Vulnerabilities: number\n                  };\n                }\n              }\n            }\n\n            _this.setState({\n              data: [].concat(_toConsumableArray(_this.state.data), [newData])\n            });\n\n            _this.setState({\n              callRespons: callRez\n            });\n\n            if (callRez.length > 1) {\n              _this.setState({\n                loading: false\n              });\n            }\n\n            for (var i = 0; i < callRez.length; i++) {\n              if (callRez[i].sir === 'Critical') {\n                _this.setState({\n                  Critical: _this.state.Critical.concat(callRez[i])\n                });\n              }\n\n              if (callRez[i].sir === 'High') {\n                _this.setState({\n                  High: _this.state.High.concat(callRez[i])\n                });\n              }\n\n              if (callRez[i].sir === 'Medium') {\n                _this.setState({\n                  Medium: _this.state.Medium.concat(callRez[i])\n                });\n              }\n\n              if (callRez[i].sir === 'Low') {\n                _this.setState({\n                  low: _this.state.Low.concat(callRez[i])\n                });\n              }\n            }\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading === true) {\n        return React.createElement(\"div\", {\n          className: \"Spin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, React.createElement(Nav, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, \"test\"));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/vitorro/Documents/WebDev/cisco/src/App.js"],"names":["React","Component","jsonString","Nav","axios","CheckboxComponent","request","require","App","state","gotData","Critical","High","Medium","Low","dhcp","dns","dosdns","dosmulti","dostcp","dosSC","dosIP","snmp","ftp","ipsocket","mvpn","vlan","sumVuln","dosVuln","string","ips","ipz","data","data1","loading","componentDidMount","post","then","res","accesstoken","access_token","i","length","object","ios","ip1","ip","setState","x","options","method","url","headers","authorization","accept","error","response","body","event","callResponse","JSON","parse","callRez","advisories","console","log","title","advisoryTitle","includes","subject","A","t","y","eachIos","q","iosRelease","count","sum","Vulnerabilities","s","iosCount","number","o","eachArray","newData","name","callRespons","sir","concat","low","catch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport jsonString from './Nmap/outfile.json'\nimport './App.css';\nimport Nav from './Nav.js';\nimport axios from 'axios';\nimport CheckboxComponent from './CheckboxComponent.js'\n\nvar request = require(\"request\");\n\nclass App extends Component {\n    state = {\n      gotData: [],\n      Critical: [],\n      High: [],\n      Medium: [],\n      Low: [],\n      dhcp: [],\n      dns: [],\n      dosdns: [],\n      dosmulti: [],\n      dostcp: [],\n      dosSC: [],\n      dosIP: [],\n      snmp: [],\n      ftp: [],\n      ipsocket: [],\n      mvpn: [],\n      vlan: [],\n      sumVuln: [],\n      dosVuln: [],\n      string: [],\n      ips: [],\n      ipz: [],\n      data: [],\n      data1: [],\n      loading: true,\n    };\n\ncomponentDidMount = () => {\n   axios.post('https://cloudsso.cisco.com/as/token.oauth2',\n    'grant_type=client_credentials&client_id=exxefret986esfy7jfjuwhr8&client_secret=hsPxtmjsSYE5FgGTJyzJwJdh'\n  )\n  .then((res) => {\n        var accesstoken = res.data.access_token;\n\n        for (var i = 0; i < jsonString.length; i++) {\n          var object = jsonString[i].ios;\n          var ip1 = jsonString[i].ip;\n          this.setState({string: [...this.state.string, object]})\n          this.setState({ips: [...this.state.ips, [object, ip1]]})\n          this.setState({ipz: [...this.state.ipz, ip1]})\n        }\n\n        for(var x=0; x < this.state.string.length; x++){\n          var options = { method: 'GET',\n          url: 'https://api.cisco.com/security/advisories/ios?version=' + this.state.string[x],\n          headers:\n           {'cache-control': 'no-cache',\n             authorization: 'Bearer ' + accesstoken,\n             accept: 'application/json' }\n           };\n\n           request(options, (error, response, body, event) => {\n             var callResponse = JSON.parse(body);\n             var callRez = callResponse.advisories;\n             console.log(callRez);\n             for(var x = 0; x < callRez.length; x++){\n               var title = callRez[x].advisoryTitle;\n                 if(title.includes('DHCP')){\n                   this.setState({dhcp: [...this.state.dhcp, 'DHCP']})\n                 }\n                 if(title.includes('DNS')){\n                   this.setState({dns: [...this.state.dns, 'DNS']})\n                 }\n                 if(title.includes('Denial of Service' && 'DNS')){\n                   this.setState({dosdns: [...this.state.dosdns, 'DNS']})\n                 }\n                 if(title.includes('Denial of Service' && 'Multicast Network Time Protocol')){\n                   this.setState({dosmulti: [...this.state.dosmulti, 'Multicast Protocol']})\n                 }\n                 if(title.includes('Denial of Service' && 'TCP')){\n                   this.setState({dostcp: [...this.state.dostcp, 'TCP']})\n                 }\n                 if(title.includes('Denial of Service' && 'Software Cluster Management Protocol')){\n                   this.setState({dosSC: [...this.state.dosSC, 'Cluster Protocol']})\n                 }\n                 if(title.includes('Denial of Service' && 'IP Fragment')){\n                   this.setState({dosIP: [...this.state.dosIP, 'IP Fragment']})\n                 }\n                 if(title.includes('SNMP')){\n                   this.setState({snmp: [...this.state.snmp, 'SNMP']})\n                 }\n                 if(title.includes('FTP')){\n                   this.setState({ftp: [...this.state.ftp, 'FTP']})\n                 }\n                 if(title.includes('IP Sockets')){\n                   this.setState({ipsocket: [...this.state.ipsocket, 'IP Sockets']})\n                 }\n                 if(title.includes('MVPN')){\n                   this.setState({mvpn: [...this.state.mvpn, 'MVPN']})\n                 }\n                 if(title.includes('VLAN')){\n                   this.setState({vlan: [...this.state.vlan, 'VLAN']})\n                 }\n\n             }\n             this.setState({dosVuln: [\n              {subject: this.state.dosdns[0], A: this.state.dosdns.length},\n              {subject: this.state.dosmulti[0], A: this.state.dosmulti.length},\n              {subject: this.state.dostcp[0], A: this.state.dostcp.length},\n              {subject: this.state.dosSC[0], A: this.state.dosSC.length},\n              {subject: this.state.dosIP[0], A: this.state.dosIP.length},\n             ]\n             })\n\n             this.setState({sumVuln: [\n               {subject: this.state.dhcp[0], A: this.state.dhcp.length},\n               {subject: this.state.dns[0], A: this.state.dns.length},\n               {subject: this.state.snmp[0], A: this.state.snmp.length},\n               {subject: this.state.ftp[0], A: this.state.ftp.length},\n               {subject: this.state.ipsocket[0], A: this.state.ipsocket.length},\n               {subject: this.state.mvpn[0], A: this.state.mvpn.length},\n               {subject: this.state.vlan[0], A: this.state.vlan.length},\n             ]})\n\n             for(var t=0; t < this.state.ips.length; t++){\n               var ios = this.state.ips[t];\n               for(var y = 0; y < ios.length; y++){\n                 var eachIos = this.state.ips[t][y];\n                   for(var q = 0; q < callResponse.advisories.length; q++){\n                     var data = callResponse.advisories[q].iosRelease[0];\n                     if(data === eachIos){\n                       var count = q + 1;\n                       var sum = {ios: eachIos, Vulnerabilities: count};\n                     }\n                   }\n               }\n              }\n              this.setState({data1: [...this.state.data1, sum]})\n\n               for(var s = 0; s < this.state.data1.length; s++){\n                 var iosCount = this.state.data1[s].ios;\n                 var number = this.state.data1[s].Vulnerabilities;\n\n               for(var o = 0; o < this.state.ips.length; o++){\n                 var eachArray = this.state.ips[o][0];\n                 var ip = this.state.ips[o][1];\n                 if(eachArray === iosCount){\n                   var newData = {name: ip, Vulnerabilities: number};\n                 }\n               }\n             }\n             this.setState({data: [...this.state.data, newData]});\n             this.setState({callRespons: callRez})\n\n             if(callRez.length > 1){\n               this.setState({loading: false})\n             }\n\n             for(var i = 0; i < callRez.length; i++){\n               if(callRez[i].sir === 'Critical'){\n                 this.setState({Critical: this.state.Critical.concat(callRez[i])})\n               }\n               if (callRez[i].sir === 'High') {\n                 this.setState({High: this.state.High.concat(callRez[i])})\n               }\n               if (callRez[i].sir === 'Medium') {\n                 this.setState({Medium: this.state.Medium.concat(callRez[i])})\n               }\n               if (callRez[i].sir === 'Low') {\n                 this.setState({low: this.state.Low.concat(callRez[i])})\n               }\n             }\n\n           })\n        }\n    })\n    .catch(error => {\n       console.log(error)\n    })\n  }\n\n  render() {\n    if(this.state.loading === true){\n      return(\n        <div className=\"Spin\">\n          <Nav />\n        </div>\n      )\n    }else{\n      return (\n      <div className=\"App\">\n        <p>\n          test\n        </p>\n        {/* <CheckboxComponent\n          critical={this.state.Critical}\n          high={this.state.High}\n          medium={this.state.Medium}\n          critical1={this.state.Critical.length}\n          high1={this.state.High.length}\n          medium1={this.state.Medium.length}\n          data={this.state.data}\n          sumVuln={this.state.sumVuln}\n          dosVuln={this.state.dosVuln}\n          numIos={this.state.string.length}\n          numIp={this.state.ipz.length}\n          ips={this.state.ips}\n          ipz={this.state.ipz}\n        /> */}\n\n      </div>\n    );\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}