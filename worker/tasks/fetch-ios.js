const axios = require('axios').default;
const request = require("request");
let jsonString = require("../../client/src/Nmap/outfile.json");
const fetch = require('node-fetch');
var redis = require("redis"),
    client = redis.createClient();

const {promisify} = require('util');
const setAsync = promisify(client.set).bind(client);

async function getIos() {
    //fetching accesstoken from Cisco
    const response = await axios.post('https://cloudsso.cisco.com/as/token.oauth2',
     'grant_type=client_credentials&client_id=exxefret986esfy7jfjuwhr8&client_secret=hsPxtmjsSYE5FgGTJyzJwJdh');

     let accessToken = response.data.access_token;

     let ipArray = [];
     let iosArray = [];
     let ipiosComb = [];
     const allAnswers = [];

     for (var i = 0; i < jsonString.length; i++) {
       let object = jsonString[i].ios;
        iosArray.push(object)
       let ips = jsonString[i].ip;
        ipArray.push(ips)
        ipiosComb.push(...[object, ips])
     }

     //Fetching data from Cisco
     for(var x=0; x < iosArray.length; x++){
      const baseURL = 'https://api.cisco.com/security/advisories/ios?version=' + iosArray[x];
      const res = await fetch(baseURL, {
        method: 'GET',
        headers:   {'cache-control': 'no-cache',
            authorization: 'Bearer ' + accessToken,
            accept: 'application/json' },
        });
      const answers = await res.json();
      allAnswers.push(...answers.advisories);
    }

    //Pushing data to Redis database
    const success = await setAsync('ios', JSON.stringify(allAnswers));
    console.log({success});
}

getIos();
module.exports = getIos;
